#!groovy
node {

    def err = null
    currentBuild.result = "SUCCESS"

    try {
       stage 'Checkout'
            checkout scm

       stage 'Deploy Containers'
            echo 'Fetch and Start Service Containers'
	        sh 'int-sdk/deployment.sh'

       stage 'Test SON-CLI'
            echo 'Basic Tests to SON-CLI Tools'
            sh 'int-sdk/test-cli.sh'

       stage 'Test SON-CLI & Push to EMU-GK'
            echo 'Test SON-CLI tools and Push Project to Emulator'
            sh 'int-sdk/test-push-emu.sh'

       stage 'Test SON-CLI & Push to SP-GK'
            echo 'Test SON-CLI tools and Push Project to Service Platform'
            sh 'int-sdk/test-push-sp.sh'

       stage 'Notifications'
            echo 'Sending mails'

            mail body: 'int-sdk-pipeline integration tests were successful',
                        from: 'sonata-nfv@gmail.com',
                        replyTo: 'sonata-nfv@gmail.com',
                        subject: 'int-sdk-pipeline: build successful',
                        to: 'lconceicao@ubiwhere.com'
        }

    catch (caughtError) {
        err = caughtError
        currentBuild.result = "FAILURE"
            mail body: "int-sdk-pipeline build error: ${err}" ,
            from: 'sonata-nfv@gmail.com',
            replyTo: 'sonata-nfv@gmail.com',
            subject: 'int-sdk-pipeline: build error',
            to: 'lconceicao@ubiwhere.com, tbatista@ubiwhere.com'
        }

    finally {
        /* Must re-throw exception to propagate error */
        if (err) {
            throw err
        }

    }
}